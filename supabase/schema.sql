
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE "public"."boxers" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp without time zone DEFAULT "now"(),
    "updated_at" timestamp without time zone,
    "is_user" boolean,
    "first_name" "text",
    "last_name" "text",
    "nickname" "text",
    "birthday" integer,
    "hometown" "text",
    "is_champion" boolean,
    "wins" integer,
    "losses" integer,
    "draws" integer,
    "ranking" integer,
    "agility" integer,
    "power" integer,
    "hand_speed" integer,
    "accuracy" integer,
    "aggression" integer,
    "reflex" integer,
    "footwork" integer,
    "evasion" integer,
    "blocking" integer,
    "reaction" integer,
    "conditioning" integer,
    "hp" integer,
    "recovery" integer,
    "chin" integer,
    "body" integer,
    "mental" integer,
    "awareness" integer,
    "fight_iq" integer,
    "danger_state" integer,
    "desperation_state" integer,
    "weightclass" bigint,
    "calendar_id" bigint
);

ALTER TABLE "public"."boxers" OWNER TO "postgres";

CREATE TABLE "public"."calendar" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "day" integer DEFAULT 0,
    "updated_at" timestamp with time zone
);

ALTER TABLE "public"."calendar" OWNER TO "postgres";

ALTER TABLE "public"."calendar" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."calendar_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."fight_history" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text"),
    "boxer_1" "uuid",
    "boxer_2" "uuid",
    "play_by_play" "jsonb"[]
);

ALTER TABLE "public"."fight_history" OWNER TO "postgres";

ALTER TABLE "public"."fight_history" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."fight_history_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."boxers"
    ADD CONSTRAINT "boxers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."calendar"
    ADD CONSTRAINT "calendar_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."fight_history"
    ADD CONSTRAINT "fight_history_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."boxers"
    ADD CONSTRAINT "boxers_calendar_id_fkey" FOREIGN KEY ("calendar_id") REFERENCES "public"."calendar"("id") ON DELETE SET NULL;

ALTER TABLE ONLY "public"."fight_history"
    ADD CONSTRAINT "fight_history_boxer_1_fkey" FOREIGN KEY ("boxer_1") REFERENCES "public"."boxers"("id");

ALTER TABLE ONLY "public"."fight_history"
    ADD CONSTRAINT "fight_history_boxer_2_fkey" FOREIGN KEY ("boxer_2") REFERENCES "public"."boxers"("id");

CREATE POLICY "Enable read access for all users" ON "public"."calendar" FOR SELECT USING (true);

ALTER TABLE "public"."calendar" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."fight_history" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."boxers" TO "anon";
GRANT ALL ON TABLE "public"."boxers" TO "authenticated";
GRANT ALL ON TABLE "public"."boxers" TO "service_role";

GRANT ALL ON TABLE "public"."calendar" TO "anon";
GRANT ALL ON TABLE "public"."calendar" TO "authenticated";
GRANT ALL ON TABLE "public"."calendar" TO "service_role";

GRANT ALL ON SEQUENCE "public"."calendar_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."calendar_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."calendar_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."fight_history" TO "anon";
GRANT ALL ON TABLE "public"."fight_history" TO "authenticated";
GRANT ALL ON TABLE "public"."fight_history" TO "service_role";

GRANT ALL ON SEQUENCE "public"."fight_history_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."fight_history_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."fight_history_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
