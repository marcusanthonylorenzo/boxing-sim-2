generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Note {
  id        String  @id @default(cuid())
  title     String
  content   String?
  color     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Boxer {
  id String @id @default(cuid())
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  is_user Boolean
  first_name String
  last_name String
  nickname String?
  birthday Int
  hometown String
  is_champion Boolean
  wins Int
  losses Int
  draws Int
  ranking Int?

    agility Int
    power Int
    hand_speed Int
    accuracy Int
    aggression Int

    reflex Int
    footwork Int
    evasion Int
    blocking Int
    reaction Int 
    
    conditioning Int
    hp Int
    recovery Int
    chin Int
    body Int
    mental Int
    awareness Int
    fight_iq Int
    danger_state Int
    desperation_state Int
}

// model Attributes {
//     offensive AttributesOffensive
//     defensive AttributesDefensive
//     health AttributesHealth
// }
// type AttributesOffensive {
//     agility Int
//     power Int
//     handSpeed Int
//     accuracy Int
//     aggression Int
// }

// type AttributesDefensive {
//     reflex Int
//     footwork Int
//     evasion Int
//     blocking Int
//     reaction Int //higher Int, higher % of offensive reaction
// }

// type AttributesHealth {
//     conditioning Int
//     hp Int
//     recovery Int
//     chin Int
//     body Int
//     mental Int
//     awareness Int
//     fightIQ Int
//     dangerState Int
//     //calculate parameter for which the boxers attributes change ie
//     // if (hp < 38% && mental < 50%) { updateBoxer(`power`, power*1.5) }
//     desperationState Int
// }